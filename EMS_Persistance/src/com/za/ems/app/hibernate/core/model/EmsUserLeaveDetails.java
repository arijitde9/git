package com.za.ems.app.hibernate.core.model;

// Generated Sep 22, 2015 3:02:16 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * EmsUserLeaveDetails generated by hbm2java
 */
@Entity
@Table(name = "ems_user_leave_details", catalog = "ems")
public class EmsUserLeaveDetails implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7669409972883819185L;
	private Long id;
	private EmsUserMaster emsUserMasterByCreatedBy;
	private EmsLeaveType emsLeaveType;
	private EmsUserMaster emsUserMasterByEmpId;
	private EmsUserMaster emsUserMasterByModifiedBy;
	private long totalLeave;
	private Long availedLeave;
	private Long leaveBalance;
	private Date effectiveDt;
	private Date expiryDt;
	private String isActive;
	private Date createdDt;
	private Date modifiedDt;

	public EmsUserLeaveDetails() {
	}

	public EmsUserLeaveDetails(EmsLeaveType emsLeaveType,
			EmsUserMaster emsUserMasterByEmpId, long totalLeave) {
		this.emsLeaveType = emsLeaveType;
		this.emsUserMasterByEmpId = emsUserMasterByEmpId;
		this.totalLeave = totalLeave;
	}

	public EmsUserLeaveDetails(EmsUserMaster emsUserMasterByCreatedBy,
			EmsLeaveType emsLeaveType, EmsUserMaster emsUserMasterByEmpId,
			EmsUserMaster emsUserMasterByModifiedBy, long totalLeave,
			Long availedLeave, Long leaveBalance, Date effectiveDt,
			Date expiryDt, String isActive, Date createdDt, Date modifiedDt) {
		this.emsUserMasterByCreatedBy = emsUserMasterByCreatedBy;
		this.emsLeaveType = emsLeaveType;
		this.emsUserMasterByEmpId = emsUserMasterByEmpId;
		this.emsUserMasterByModifiedBy = emsUserMasterByModifiedBy;
		this.totalLeave = totalLeave;
		this.availedLeave = availedLeave;
		this.leaveBalance = leaveBalance;
		this.effectiveDt = effectiveDt;
		this.expiryDt = expiryDt;
		this.isActive = isActive;
		this.createdDt = createdDt;
		this.modifiedDt = modifiedDt;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "ID", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATED_BY")
	public EmsUserMaster getEmsUserMasterByCreatedBy() {
		return this.emsUserMasterByCreatedBy;
	}

	public void setEmsUserMasterByCreatedBy(
			EmsUserMaster emsUserMasterByCreatedBy) {
		this.emsUserMasterByCreatedBy = emsUserMasterByCreatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LEAVE_TYPE_ID", nullable = false)
	public EmsLeaveType getEmsLeaveType() {
		return this.emsLeaveType;
	}

	public void setEmsLeaveType(EmsLeaveType emsLeaveType) {
		this.emsLeaveType = emsLeaveType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EMP_ID", nullable = false)
	public EmsUserMaster getEmsUserMasterByEmpId() {
		return this.emsUserMasterByEmpId;
	}

	public void setEmsUserMasterByEmpId(EmsUserMaster emsUserMasterByEmpId) {
		this.emsUserMasterByEmpId = emsUserMasterByEmpId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MODIFIED_BY")
	public EmsUserMaster getEmsUserMasterByModifiedBy() {
		return this.emsUserMasterByModifiedBy;
	}

	public void setEmsUserMasterByModifiedBy(
			EmsUserMaster emsUserMasterByModifiedBy) {
		this.emsUserMasterByModifiedBy = emsUserMasterByModifiedBy;
	}

	@Column(name = "TOTAL_LEAVE", nullable = false)
	public long getTotalLeave() {
		return this.totalLeave;
	}

	public void setTotalLeave(long totalLeave) {
		this.totalLeave = totalLeave;
	}

	@Column(name = "AVAILED_LEAVE")
	public Long getAvailedLeave() {
		return this.availedLeave;
	}

	public void setAvailedLeave(Long availedLeave) {
		this.availedLeave = availedLeave;
	}

	@Column(name = "LEAVE_BALANCE")
	public Long getLeaveBalance() {
		return this.leaveBalance;
	}

	public void setLeaveBalance(Long leaveBalance) {
		this.leaveBalance = leaveBalance;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "EFFECTIVE_DT", length = 0)
	public Date getEffectiveDt() {
		return this.effectiveDt;
	}

	public void setEffectiveDt(Date effectiveDt) {
		this.effectiveDt = effectiveDt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "EXPIRY_DT", length = 0)
	public Date getExpiryDt() {
		return this.expiryDt;
	}

	public void setExpiryDt(Date expiryDt) {
		this.expiryDt = expiryDt;
	}

	@Column(name = "IS_ACTIVE", length = 1)
	public String getIsActive() {
		return this.isActive;
	}

	public void setIsActive(String isActive) {
		this.isActive = isActive;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DT", length = 0)
	public Date getCreatedDt() {
		return this.createdDt;
	}

	public void setCreatedDt(Date createdDt) {
		this.createdDt = createdDt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MODIFIED_DT", length = 0)
	public Date getModifiedDt() {
		return this.modifiedDt;
	}

	public void setModifiedDt(Date modifiedDt) {
		this.modifiedDt = modifiedDt;
	}

}
